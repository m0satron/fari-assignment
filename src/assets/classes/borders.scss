@use '@/assets/variables/borders.scss' as b;
@use '@/assets/mixins/class-generator.scss' as cg;
@use '@/assets/variables/colors.scss' as c;

$colors: (
  'blue': c.$blue,
  'blue-light': c.$blue-light,
  'white': c.$white,
  'black': c.$black
);

$borders: (
  'none': none,
  's': b.$s solid,
  'm': b.$m solid,
  'l': b.$l solid,
  'xl': b.$xl solid
);

$border-radiuses: (
  'none': b.$none,
  's': b.$small,
  'm': b.$medium,
  'l': b.$rounded,
  //TODO
  'l2': b.$rounded-large,
  'xl': b.$pill
);

.border {
  border: b.$s solid c.$black;
  @include cg.class-generator($list: $borders, $attribute: 'border');
  @include cg.class-generator($list: $colors, $attribute: 'border-color');
}

.rounded {
  border-radius: b.$rounded;
  @include cg.class-generator($list: $border-radiuses, $attribute: 'border-radius');
}

.rounded-es {
  border-radius: b.$rounded;
  @include cg.class-generator($list: $border-radiuses, $attribute: 'border-end-start-radius');
}

.rounded-ee {
  border-radius: b.$rounded;
  @include cg.class-generator($list: $border-radiuses, $attribute: 'border-end-end-radius');
}
.rounded-ss {
  border-radius: b.$rounded;
  @include cg.class-generator($list: $border-radiuses, $attribute: 'border-start-start-radius');
}

.rounded-se {
  border-radius: b.$rounded;
  @include cg.class-generator($list: $border-radiuses, $attribute: 'border-start-end-radius');
}
